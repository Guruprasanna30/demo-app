name: Build and Kubernetes deployment

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_build_version.outputs.BUILD_VERSION }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"

      - name: Build package
        run: mvn clean package -DskipTests=true

      - name: Archive JAR
        uses: actions/upload-artifact@v3
        with:
          name: JAR-Artifact
          path: target/*.jar

      # - name: Unit testing
      #   run: mvn test

      # - run: mvn clean test jacoco:report

      # - name: Jacoco code coverage report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Upload Jacoco code coverage report
      #     path: target/site/jacoco

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: JAR-Artifact
          path: target

      - name: Set Build Version
        id: set_build_version
        run: echo "::set-output name=BUILD_VERSION::$(git rev-parse --short HEAD)-${{ github.run_number }}"

      - name: Build docker image
        run: docker build -t guruprasanna30/numeric-app:${{ steps.set_build_version.outputs.BUILD_VERSION }} .

      - name: Login to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push Docker image to docker hub
        run: docker push guruprasanna30/numeric-app:${{  steps.set_build_version.outputs.BUILD_VERSION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl "https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl" \
            --location --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update config file
        run: |
          mkdir -p ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
          sed -i 's#replace#guruprasanna30/numeric-app:${{  needs.build.outputs.version }}#g' k8s_deployment_service.yaml

      - name: Use context
        run: kubectl config use-context mycluster

      - name: Deleting old deployment
        run: kubectl delete deploy devsecops && kubectl delete svc devsecops-svc

      - name: Apply Kubernetes deployment
        run: kubectl apply -f k8s_deployment_service.yaml
